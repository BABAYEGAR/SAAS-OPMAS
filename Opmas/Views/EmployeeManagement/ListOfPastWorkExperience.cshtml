@using Opmas.Data.Objects.Entities.Employee
@using Opmas.Data.Service.Enums
@model IEnumerable<Opmas.Data.Objects.Entities.Employee.EmployeePastWorkExperience>

@{
    ViewBag.Title = "List";
    ViewBag.Header = "Past Work Experience";
    ViewBag.Subheader = "List Of Past Work Experienc";
    Layout = "~/Views/Shared/_LayoutListItems.cshtml";
    var pastWorkExperience = new EmployeePastWorkExperience();
}
@if (TempData["work"] != null)
{
    if (TempData["notificationtype"].Equals(NotificationTypeEnum.Success.ToString()))
    {
        <div class="alert-success alert-dismissable">@TempData["work"]</div>
    }
    else if (TempData["notificationtype"].Equals(NotificationTypeEnum.Error.ToString()))
    {
        <div class="alert alert-danger alert-dismissable">@TempData["work"]</div>
    }
    else if (TempData["notificationtype"].Equals(NotificationTypeEnum.Info.ToString()))
    {
        <div class="alert-info alert-dismissable">@TempData["work"]</div>
    }
}
@section add {
    <!-- Button trigger modal -->
    <button type="button" class="btn btn-primary btn-xs fa fa-plus" data-toggle="modal" data-target="#myModal">
        Add Data
    </button>

    <!-- Modal -->
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title" id="myModalLabel">Add a new past work experience</h4>
                </div>
                <div class="modal-body">
                    @{
                        Html.RenderPartial("CreateSinglePastWorkExperience", pastWorkExperience);
                    }
                </div>
            </div>
        </div>

    </div>
}

<table id="datatable" class="table table-striped table-bordered">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.EmployerName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StartDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EndDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EmployerContact)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PositionHeld)
        </th>
        <th>Action</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.EmployerName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EmployerContact)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PositionHeld)
            </td>
            <td>
                @Html.ActionLink("Remove", "RemovePastWorkExperienceById", new {id = item.EmployeeId}, new {@class = "btn btn-xs btn-danger fa fa-remove"})
            </td>
        </tr>
    }
    </tbody>

</table>