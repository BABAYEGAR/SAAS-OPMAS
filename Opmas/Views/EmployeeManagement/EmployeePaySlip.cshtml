@using System.Data.Entity
@using Opmas.Data.DataContext.DataContext.EmployeeDataContext
@using Opmas.Data.Objects.Entities.SystemManagement
@using Opmas.Data.Service.Enums
@model Opmas.Data.Objects.Entities.Employee.Employee
@{
    var institution = Session["institution"] as Institution;

    Layout = "~/Views/Shared/_LayoutListItems.cshtml";
    var db = new EmployeeDataContext();
    var employeeWorkData = db.EmployeeWorkDatas.SingleOrDefault(n => n.EmployeeId == Model.EmployeeId);
    var employmentPositionId = employeeWorkData?.EmploymentPositionId;
    var employmentPosition = db.EmploymentPositions.Find(employmentPositionId);
    var allowanceMapping = db.PositionAllowanceMappings.Where(n => (n.EmploymentPositionId == employmentPositionId) && (n.InstitutionId == institution.InstitutionId)).Include(n => n.PaymentAllowance);

    var allowanceTotal = db.PositionAllowanceMappings.Where(n => (n.EmploymentPositionId == employmentPositionId) && (n.InstitutionId == institution.InstitutionId)).Include(n => n.PaymentAllowance).Sum(n => n.PaymentAllowance.Rate*employmentPosition.Income/100);

    var deductionMapping = db.PositionDeductionMappings.Where(n => (n.EmploymentPositionId == employmentPositionId) && (n.InstitutionId == institution.InstitutionId)).Include(n => n.PaymentDeduction);

    var deductionTotal = db.PositionDeductionMappings.Where(n => (n.EmploymentPositionId == employmentPositionId) && (n.InstitutionId == institution.InstitutionId)).Include(n => n.PaymentDeduction).Sum(n => n.PaymentDeduction.Rate*employmentPosition.Income/100);

    var requestedDeductions = db.PaymentDeductionRequests.Where(n => (n.InstitutionId == Model.InstitutionId) && (n.EmployeeId == Model.EmployeeId) && (n.Status == PaymentDeductionRequestStatus.Granted.ToString())).ToList();

    long? requestedDeductionsTotal = 0;
    if (requestedDeductions.Count > 0)
    {
        requestedDeductionsTotal = requestedDeductions.Sum(n => n.Amount);
    }


    ViewBag.Title = "List";
    ViewBag.Header = "Basic Salary : N" + employmentPosition.Income;
    ViewBag.Subheader = "Employee Payment Slip";
}


<h2 style="font-weight: bolder">Payment Allowances & Bonuses</h2>
<table class="table table-striped projects">
    <thead>
    <tr>
        <th>Allowance Item</th>
        <th>Rate (%)</th>
        <th>Amount Designated (N)</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in allowanceMapping)
    {
        var balance = item.PaymentAllowance.Rate * employmentPosition.Income / 100;
        <tr>
            <td>
                @item.PaymentAllowance.Name
            </td>
            <td>
                @item.PaymentAllowance.Rate
            </td>
            <td style="color: green">
                @balance
            </td>
        </tr>
    }
    </tbody>
</table>
<label style="color: green">Total Amount For Allowances & Bonuses : N@(allowanceTotal) </label><br/>
<label>Gross Income : <strong style="color: black; font-size: 14px; font-weight: bolder;">N@(allowanceTotal + employmentPosition.Income)</strong> </label>
<br/>
<br/>
<br/>
<h2 style="font-weight: bolder">Payment Deductions</h2>
<table class="table table-striped projects">
    <thead>
    <tr>
        <th>Deduction Item</th>
        <th>Rate (%)</th>
        <th>Amount Deducted (N) </th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in deductionMapping)
    {
        var balance = item.PaymentDeduction.Rate*employmentPosition.Income/100;
        <tr>
            <td>
                @item.PaymentDeduction.Name
            </td>
            <td>
                @item.PaymentDeduction.Rate
            </td>
            <td style="color: red">
                @balance
            </td>
        </tr>
    }
    </tbody>
</table>

<label style="color: red">Total Amount to be Deducted : N@(deductionTotal) </label>

<br/>
<br/>
<br/>

<h2 style="font-weight: bolder">Other Payment Deductions</h2>
<table class="table table-striped projects">
    <thead>
    <tr>
        <th>Deduction Item</th>
        <th>Amount Deducted (N) </th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in requestedDeductions)
    {
        <tr>
            <td>
                @item.RequestTitle
            </td>
            <td style="color: red">
                @item.Amount
            </td>
        </tr>
    }
    </tbody>
</table>
<label style="color: red">Total Amount to be Deducted : N@(requestedDeductionsTotal) </label>

<br/>
<br/>
<label>Net Income : <strong style="color: black; font-size: 14px; font-weight: bolder;">N@(employmentPosition.Income + allowanceTotal - deductionTotal - requestedDeductionsTotal) Monthly</strong> </label><br/>
<div class="row no-print">
    <div class="col-xs-12">
        <button class="btn btn-default" onclick="window.print();"><i class="fa fa-print"></i> Print</button>
        <button class="btn btn-primary pull-right" style="margin-right: 5px;"><i class="fa fa-download"></i> Generate PDF</button>
    </div>
</div>