@using Opmas.Data.Service.Enums
@model Opmas.Data.Objects.Entities.Employee.EmployeePersonalData
@{
    ViewBag.Title = "Step One: Employee Personal Data";
    ViewBag.HeaderClass = "page-header";
    bool? returnUrl = ViewBag.returnUrl ?? false;
}

<header class="@ViewBag.HeaderClass">
    <div class="overlay"></div>
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <h2 class="tagline">@ViewBag.Title</h2>
            </div>
        </div>
    </div>
</header>

<div class="container">

    <div class="row hidden-xs">
        <ul class="progressbar">
            <li class="active">
                Step One <br/>
                <small>Personal Data</small>

            </li>
            <li>
                Step Two <br/>
                <small>Educational Qualification</small>
            </li>
            <li>
                Step Three <br/>
                <small>Past Work Experience</small>
            </li>
            <li>
                Step Four <br/>
                <small>Next Of Kin Data</small>
            </li>
            <li>
                Step Five <br/>
                <small>Bank Data</small>
            </li>
            <li>
                Step Six <br/>
                <small>Medical/Work Data</small>

            </li>
            <li>
                Confirmation <br/>
                <small>Review of Employee Info</small>
            </li>
            <li>
                Completed <br/>
                <small>Registration Complete</small>
            </li>
        </ul>
    </div>
    <hr/>
    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("PersonalData", "EmployeeManagement", FormMethod.Post, new {@class = "form"}))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(false, "", new {@class = "text-danger"})
                <fieldset>
                    <legend>Employee Personal Data</legend>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.Title, new {@class = "control-label"}) <span class="req">*</span>
                        @Html.DropDownListFor(m => m.Title, EnumHelper.GetSelectList(typeof(NameTitle)), "select your title", new {@class = "form-control select-dropdown"})
                    </div>

                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.Firstname, new {@class = "control-label"}) <span class="req">*</span>
                        @Html.TextBoxFor(m => m.Firstname, new {@class = "form-control", placeholder = "Please enter your first name"})
                    </div>

                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.Lastname, new {@class = "control-label"}) <span class="req">*</span>
                        @Html.TextBoxFor(m => m.Lastname, new {@class = "form-control", placeholder = "Please enter your last name"})
                    </div>
                    <div class="clearfix"></div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.Middlename, new {@class = "control-label"})
                        @Html.TextBoxFor(m => m.Middlename, new {@class = "form-control", placeholder = "Please enter your middle name"})
                    </div>

                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.DateOfBirth, new {@class = "control-label"}) <span class="req">*</span>
                        @Html.TextBoxFor(m => m.DateOfBirth, new {@class = "form-control dob", placeholder = "Please enter your date of birth"})
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.PlaceOfBirth, "Place Of Birth:", new {@class = "control-label"}) <span class="req">*</span>
                        @Html.TextBoxFor(m => m.PlaceOfBirth, new {@class = "form-control", placeholder = "Please enter your place of birth"})
                    </div>
                    <div class="clearfix"></div>
                    <div class="form-group col-md-12">
                        @Html.LabelFor(m => m.Gender, new {@class = "control-label"}) <span class="req">*</span>
                        <div>
                            <label class="radio-inline">@Html.RadioButtonFor(m => m.Gender, "Male") Male</label>
                            <label class="radio-inline">@Html.RadioButtonFor(m => m.Gender, "Female") Female</label>
                        </div>
                    </div>
                    <div class="clearfix"></div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(m => m.State, new {@class = "control-label"}) <span class="req">*</span>
                        @Html.DropDownListFor(m => m.StateId, (SelectList) ViewBag.State, "--Please select your state--", new {@class = "form-control select-dropdown", id = "state"})

                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(m => m.Lga, new {@class = "control-label"}) <span class="req">*</span>
                        @Html.DropDownListFor(m => m.LgaId, new SelectList(string.Empty, "Value", "Text"), "--Please select your local government area--", new {@class = "form-control select-dropdown", id = "lga"})

                    </div>


                    <div class="clearfix"></div>

                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.PrimaryAddress, new {@class = "control-label"}) <span class="req">*</span>
                        @Html.TextAreaFor(m => m.PrimaryAddress, new {@class = "form-control", placeholder = "Please enter your primary address"})
                    </div>

                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.SecondaryAddress, new {@class = "control-label"})
                        @Html.TextAreaFor(m => m.SecondaryAddress, new {@class = "form-control", placeholder = "Please enter your secondary address"})
                    </div>

                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.Email, new {@class = "control-label"}) <span class="req">*</span>
                        @Html.TextBoxFor(m => m.Email, new {@class = "form-control", placeholder = "Please enter your personal email", id = "email"})
                    </div>
                    <div class="clearfix"></div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.HomePhone, "Home Number:", new {@class = "control-label"}) <span class="req">*</span>
                        @Html.TextBoxFor(m => m.HomePhone, new {@class = "form-control", placeholder = "Please enter your home number"})
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.MobilePhone, new {@class = "control-label"})
                        @Html.TextBoxFor(m => m.MobilePhone, new {@class = "form-control", placeholder = "Please enter your mobile number"})
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.WorkPhone, new {@class = "control-label"}) <span class="req">*</span>
                        @Html.TextBoxFor(m => m.WorkPhone, new {@class = "form-control", placeholder = "Please enter your work number"})
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(m => m.PostalCode, new {@class = "control-label"}) <span class="req">*</span>
                        @Html.TextBoxFor(m => m.PostalCode, new {@class = "form-control", placeholder = "Please enter your postal code"})
                    </div>
                    <div class="clearfix"></div>
                    <div class="form-group col-md-12">
                        @Html.Label("MaritalStatus", "Marital Status:", new {@class = "control-label"}) <span class="req">*</span>
                        <div>
                            <label class="radio-inline">@Html.RadioButton("MaritalStatus", "Married") Married</label>
                            <label class="radio-inline">@Html.RadioButton("MaritalStatus", "Single") Single</label>
                            <label class="radio-inline">@Html.RadioButton("MaritalStatus", "Widow") Widow</label>
                            <label class="radio-inline">@Html.RadioButton("MaritalStatus", "Divorcee") Divorcee</label>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <div class="clearfix"></div>

                </fieldset>

                <div class="col-md-12">
                    <a href="@Url.Action("Login", "Account")" class="btn btn-default">Cancel</a>
                    @if (returnUrl != true)
                    {
                        <input type="submit" value="Next" class="btn btn-brown pull-right"/>
                    }
                    @if (returnUrl == true)
                    {
                        using (Html.BeginForm("PersonalData", "EmployeeManagement", FormMethod.Post, new {@class = "form"}))
                        {
                            @Html.Hidden("returnUrl", true)
                            <input type="submit" value="Revert back to Review Page" class="btn btn-primary pull-right"/>
                        }
                    }
                </div>
            }
        </div>
    </div>
</div>


@section scripts {
    <script>
        $(document)
            .ready(function() {


                //checks if the state has a value before displaying assigned lga
                if ($('#state').val() != '') {
                    getLgaForState();
                }

                //loads assigned lga for state on change/select
                $('#state').on('change', function() { getLgaForState(); });

                //Ajax call for Lga assigned to state
                function getLgaForState() {

                    $("#lga").empty();
                    $.ajax({
                        type: 'GET',
                        url: '@Url.Action("GetLgaForState", "EmployeeManagement")',
                        dataType: 'json',
                        data: { id: $("#state").val() },
                        success: function(lga) {

                            $.each(lga,
                                function(i, lga) {
                                    $("#lga").append('<option value="' + lga.LgaId + '">' + lga.Name + '</option>');
                                });
                        },
                        error: function(ex) {
                            alert('Failed to retrieve lga.' + ex);
                        }
                    });
                }

                //Ajax ends
            });


    </script>
}