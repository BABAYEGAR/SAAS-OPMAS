@using Opmas.Data.DataContext.DataContext.EmployeeDataContext
@using Opmas.Data.DataContext.DataContext.SystemDataContext
@using Opmas.Data.Objects.Entities.SystemManagement
@using Opmas.Data.Service.Enums
@model Opmas.Data.Objects.Entities.Employee.EmployeeMedicalData
@{
    ViewBag.Title = "Step Five:Employee Medical & Other Data";
    ViewBag.HeaderClass = "page-header";
    var institution = Session["institution"] as Institution;
    var role = new RoleDataContext();
    var faculty = new FacultyDataContext();
    ViewBag.RoleId = new SelectList(role.Roles.Where(n => n.InstitutionId == institution.InstitutionId), "RoleId", "Name");
    ViewBag.FacultyId = new SelectList(faculty.Faculties.Where(n => n.InstitutionId == institution.InstitutionId), "FacultyId", "Name");
}

@section css {
    <link href="~/Scripts/plugins/bootstrap-datepicker/css/bootstrap-datepicker.min.css" rel="stylesheet"/>
}

<header class="@ViewBag.HeaderClass">
    <div class="overlay"></div>
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <h2 class="tagline">@ViewBag.Title</h2>
            </div>
        </div>
    </div>
</header>

<div class="container">
    <div class="row hidden-xs">
        <ul class="progressbar">
            <li>
                Step One <br/>
                <small>Personal Data</small>

            </li>
            <li>
                Step Two <br/>
                <small>Educational Qualification</small>
            </li>
            <li>
                Step Three <br/>
                <small>Past Work Experience</small>
            </li>
            <li>
                Step Four <br/>
                <small>Next Of Kin Data</small>
            </li>
            <li>
                Step Five <br/>
                <small>Bank Data</small>
            </li>
            <li class="active">
                Step Six <br/>
                <small>Medical/Work Data</small>

            </li>
            <li>
                Confirmation <br/>
                <small>Review of Employee Info</small>
            </li>
            <li>
                Completed <br/>
                <small>Registration Complete</small>
            </li>
        </ul>
    </div>
    <hr/>
    <div class="row">
        <div class="col-md-12">
            @if (TempData["medical"] != null)
            {
                if (TempData["notificationtype"].Equals(NotificationTypeEnum.Success.ToString()))
                {
                    <div class="alert-success alert-dismissable">@TempData["medical"]</div>
                }
                else if (TempData["notificationtype"].Equals(NotificationTypeEnum.Error.ToString()))
                {
                    <div class="alert-danger alert-dismissable">@TempData["medical"]</div>
                }
                else if (TempData["notificationtype"].Equals(NotificationTypeEnum.Info.ToString()))
                {
                    <div class="alert-info alert-dismissable">@TempData["medical"]</div>
                }
            }
            @using (Html.BeginForm("MedicalData", "EmployeeManagement", FormMethod.Post, new {@class = "form"}))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(false, "", new {@class = "text-danger"})
                <fieldset>
                    <legend>Employee Bank Data</legend>

                    <div class="form-group col-md-12">
                        @Html.LabelFor(m => m.BloodGroup, new {@class = "control-label"}) <span class="req">*</span>
                        @Html.DropDownList("BloodGroup", EnumHelper.GetSelectList(typeof(BloodGroup)), "select your blood group", new {@class = "form-control select-dropdown"})
                    </div>
                    <div class="clearfix"></div>

                    <div class="form-group col-md-12">
                        @Html.LabelFor(m => m.Genotype, new {@class = "control-label"})<span class="req">*</span>
                        @Html.DropDownList("Genotype", EnumHelper.GetSelectList(typeof(Genotype)), "select your genotype", new {@class = "form-control select-dropdown"})
                    </div>
                </fieldset>
                <div class="clearfix"></div>
                <fieldset>
                    <legend>Employee Work Data</legend>

                    <div class="form-group col-md-12">
                        @Html.Label("Employment Type", new {@class = "control-label"}) <span class="req">*</span>
                        @Html.DropDownList("EmploymentType", EnumHelper.GetSelectList(typeof(EmploymentType)), "select your employment type", new {@class = "form-control select-dropdown"})
                    </div>
                    <div class="form-group col-md-12">
                        @Html.Label("Employment Date", new {@class = "control-label"})<span class="req">*</span>
                        @Html.TextBox("EmploymentDate", null, new {@class = "form-control startDate", placeholder = "Please select employment date"})
                    </div>
                    <div class="form-group col-md-12">
                        @Html.Label("Employment Category", new {@class = "control-label"})<span class="req">*</span>
                        @Html.DropDownList("EmploymentCategory", EnumHelper.GetSelectList(typeof(EmployementCategory)), "select your employment category", new {@class = "form-control select-dropdown"})
                    </div>
                    <div class="form-group col-md-12">
                        @Html.Label("Employment Position", new {@class = "control-label"})<span class="req">*</span>
                        @Html.TextBox("EmploymentPosition", null, new {@class = "form-control", placeholder = "Please enter employment position"})
                    </div>
                    <div class="form-group col-md-12">
                        @Html.Label("RoleId", "Assigned Role", new {@class = "control-label"})
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.DropDownList("RoleId", null, new {@class = "form-control select-dropdown"})

                        </div>
                    </div>
                    <div class="form-group col-md-12">
                        @Html.Label("FacultyId", "Assigned Faculty", new {@class = "control-label"})
                        @Html.DropDownList("FacultyId", null, new {@class = "form-control select-dropdown", id = "state"})


                    </div>
                    <div class="form-group col-md-12">
                        @Html.Label("DepartmentId", "Assigned Department", new {@class = "control-label"})
                        @Html.DropDownList("DepartmentId", new SelectList(string.Empty, "Value", "Text"), new {@class = "form-control select-dropdown", id = "lga"})


                    </div>
                </fieldset>

                <hr/>

                <div class="col-md-12">

                    <input type="submit" class="btn btn-default cancel" value="Back"/>
                    <input type="submit" value="Next" class="btn btn-brown pull-right"/>
                </div>
            }
        </div>
    </div>
</div>

@section scripts {
    <script src="~/Scripts/plugins/moment/moment.js"></script>
    <script src="~/Scripts/plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js"></script>
    <script>

        $(document)
            .ready(function() {
                $('.startDate').datepicker({ 'endDate': new Date() });

                //checks if the state has a value before displaying assigned lga
                if ($('#state').val() != '') {
                    getLgaForState();
                }

                //loads assigned lga for state on change/select
                $('#state').on('change', function() { getLgaForState(); });

                //Ajax call for Lga assigned to state
                function getLgaForState() {

                    $("#lga").empty();
                    $.ajax({
                        type: 'GET',
                        url: '@Url.Action("GetDepartmentForFaculty", "EmployeeManagement")',
                        dataType: 'json',
                        data: { id: $("#state").val() },
                        success: function(lga) {

                            $.each(lga,
                                function(i, lga) {
                                    $("#lga")
                                        .append('<option value="' + lga.DepartmentId + '">' + lga.Name + '</option>');
                                });
                        },
                        error: function(ex) {
                            alert('Failed to retrieve lga.' + ex);
                        }
                    });
                }

                //Ajax ends
            });
    </script>
}