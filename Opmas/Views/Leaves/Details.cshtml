@using System.Data.Entity
@using Opmas.Data.DataContext.DataContext.EmployeeDataContext
@using Opmas.Data.Objects.Entities.Employee
@using Opmas.Data.Objects.Entities.SystemManagement
@using Opmas.Data.Objects.Entities.User
@using Opmas.Data.Service.Enums
@model Opmas.Data.Objects.LeaveManagement.Leave

@{
    ViewBag.Title = "Details";
    ViewBag.Header = "Leave";
    ViewBag.Subheader = "View leave details";
    Layout = "~/Views/Shared/_LayoutForm.cshtml";
    var loggedinuser = Session["opmasloggedinuser"] as AppUser;
    var userRole = Session["role"] as Role;
    var institutionStructure = Session["institutionstructure"] as InstitutionStructure;
    var dbEmployee = new EmployeeDataContext();
    var isUserDepartmentManager = dbEmployee.Departments.SingleOrDefault(n => n.EmployeeId == loggedinuser.EmployeeId);
    var isUserFacultyManager = dbEmployee.Faculties.SingleOrDefault(n => n.EmployeeId == loggedinuser.EmployeeId);
    var employmentPositionId = dbEmployee.EmployeeWorkDatas.FirstOrDefault(n => n.EmployeeId == Model.EmployeeId).EmploymentPositionId;
    var seniorStaff = dbEmployee.EmploymentPositions.Find(employmentPositionId);
    var db = new EmployeeDataContext();

    //check if leave is from notification and mark as read
    long? notificationId = ViewBag.ReadId;

    var notification = db.ApplicationNotifications.Find(notificationId);
    if (notification != null)
    {
        notification.Read = true;
    }
    if (notificationId == null)
    {
    }
    else
    {
        db.Entry(notification).State = EntityState.Modified;
        db.SaveChanges();
    }
}
<dl class="dl-horizontal">
    <dt>
        @Html.DisplayNameFor(model => model.Employee.EmployeeId)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Employee.EmployeeId)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.Institution.Name)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Institution.Name)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.LeaveType.Name)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.LeaveType.Name)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.Reason)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Reason)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.Status)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Status)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.Comment)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Comment)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.StartDate)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.StartDate)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.EndDate)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.EndDate)
    </dd>
    <dt>
        @Html.DisplayNameFor(model => model.CreatedBy)
    </dt>

    <dd>
        @(db.AppUsers.Find(Model.CreatedBy).DisplayName)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.DateCreated)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.DateCreated)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.DateLastModified)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.DateLastModified)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.LastModifiedBy)
    </dt>

    <dd>
        @(db.AppUsers.Find(Model.LastModifiedBy).DisplayName)
    </dd>

</dl>
<p>
    @if ((Model.Status == LeaveStatus.Pending.ToString()) && (Model.EmployeeId == loggedinuser?.EmployeeId))
    {
        @Html.ActionLink("Edit Leave", "Edit", new {id = Model.LeaveId}, new {@class = "btn btn-primary btn-xs fa fa-pencil"})
    }




    @if ((institutionStructure != null) && institutionStructure.Faculty && (Model.Status == LeaveStatus.Pending.ToString()) && (isUserDepartmentManager != null) && (isUserDepartmentManager.DepartmentId == Model.DepartmentId))
    {
        @Html.ActionLink("Approve Request", "ApprovedLeaveByDepartment", "Leaves", new {id = Model.LeaveId}, new {@class = "btn btn-danger btn-xs fa fa-check"})
    }




    @if ((institutionStructure != null) && institutionStructure.Faculty && (Model.Status == LeaveStatus.ApprovedByDepartment.ToString()) && (isUserDepartmentManager != null) && (isUserDepartmentManager.FacultyId == Model.FacultyId) && (seniorStaff.SeniorMember == false))
    {
        @Html.ActionLink("Approve Request", "ApproveLeave", "Leaves", new {id = Model.LeaveId}, new {@class = "btn btn-danger btn-xs fa fa-check"})
    }
    @if ((institutionStructure != null) && institutionStructure.Faculty && (Model.Status == LeaveStatus.ApprovedByDepartment.ToString()) && (isUserDepartmentManager != null) && (isUserDepartmentManager.FacultyId == Model.FacultyId) && seniorStaff.SeniorMember)
    {
        @Html.ActionLink("Approve Request", "ApprovedLeaveByFaculty", "Leaves", new {id = Model.LeaveId}, new {@class = "btn btn-danger btn-xs fa fa-check"})
    }
    @if ((userRole != null) && userRole.ManageSeniorStaffLeave && (Model.Status == LeaveStatus.ApprovedByFaculty.ToString()))
    {
        @Html.ActionLink("Approve Request", "ApproveLeave", "Leaves", new {id = Model.LeaveId}, new {@class = "btn btn-danger btn-xs fa fa-check"})
    }



    @if ((institutionStructure != null) && (institutionStructure.Faculty == false) && (Model.Status == LeaveStatus.Pending.ToString()) && (isUserDepartmentManager != null) && (isUserDepartmentManager.DepartmentId == Model.DepartmentId) && seniorStaff.SeniorMember && userRole.ManageSeniorStaffLeave)
    {
        @Html.ActionLink("Approve Request", "ApprovedLeaveByDepartment", "Leaves", new {id = Model.LeaveId}, new {@class = "btn btn-danger btn-xs fa fa-check"})
    }

    @if ((institutionStructure != null) && (institutionStructure.Faculty == false) && (Model.Status == LeaveStatus.ApprovedByDepartment.ToString()) && (isUserDepartmentManager != null) && (isUserDepartmentManager.DepartmentId == Model.DepartmentId) && seniorStaff.SeniorMember && userRole.ManageSeniorStaffLeave)
    {
        @Html.ActionLink("Approve Request", "ApproveLeave", "Leaves", new {id = Model.LeaveId}, new {@class = "btn btn-danger btn-xs fa fa-check"})
    }


    @if ((institutionStructure != null) && (institutionStructure.Faculty == false) && (Model.Status == LeaveStatus.Pending.ToString()) && (isUserDepartmentManager != null) && (isUserDepartmentManager.DepartmentId == Model.DepartmentId) && (seniorStaff.SeniorMember == false))
    {
        @Html.ActionLink("Approve Request", "ApproveLeave", "Leaves", new {id = Model.LeaveId}, new {@class = "btn btn-danger btn-xs fa fa-check"})
    }

    @if ((Model.Status == LeaveStatus.Pending.ToString()) && (Model.EmployeeId == loggedinuser?.EmployeeId))
    {
        @Html.ActionLink("Cancel Request", "CancelLeave", new {id = Model.LeaveId}, new {@class = "btn btn-danger btn-xs fa fa-remove"})
    }
</p>