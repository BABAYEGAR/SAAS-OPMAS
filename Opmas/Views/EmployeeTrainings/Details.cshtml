@using System.Data.Entity
@using Opmas.Data.DataContext.DataContext.EmployeeDataContext
@using Opmas.Data.Objects.Entities.Employee
@model Opmas.Data.Objects.Training.EmployeeTraining
@{
    ViewBag.Title = "Details";
    ViewBag.Header = "Training Session";
    ViewBag.Subheader = "View training details";
    Layout = "~/Views/Shared/Layout/_LayoutForm.cshtml";
    var role = Session["role"] as Role;
    var db = new EmployeeDataContext();

    //check if leave is from notification and mark as read
    long? notificationId = ViewBag.ReadId;

    var notification = db.ApplicationNotifications.Find(notificationId);
    if (notification != null)
    {
        notification.Read = true;
    }
    db.Entry(notification).State = EntityState.Modified;
    db.SaveChanges();
}
<div>

    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Location)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Location)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StartDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StartDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EndDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EndDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StartTime)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StartTime)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EndTime)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EndTime)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CoordinatorFullname)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CoordinatorFullname)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CoordinatorCompany)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CoordinatorCompany)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CreatedBy)
        </dt>

        <dd>
            @(db.AppUsers.Find(Model.CreatedBy).DisplayName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DateCreated)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateCreated)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DateLastModified)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateLastModified)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LastModifiedBy)
        </dt>

        <dd>
            @(db.AppUsers.Find(Model.LastModifiedBy).DisplayName)
        </dd>

    </dl>
</div>
@if ((role != null) && role.ManageTraining)
{
    <p>
        @Html.ActionLink("Edit Training", "Edit", new {id = Model.EmployeeTrainingId}, new {@class = "btn btn-primary btn-xs fa fa-pencil"})
        @Html.ActionLink("Delete Training", "Delete", new {id = Model.EmployeeTrainingId}, new {@class = "btn btn-danger btn-xs fa fa-remove"})
    </p>
}