@using System.Data.Entity
@using Opmas.Data.DataContext.DataContext.EmployeeDataContext
@using Opmas.Data.Objects.Entities.Employee
@model Opmas.Data.Objects.Training.EmployeeTraining
@{
    ViewBag.Title = "Details";
    ViewBag.Header = "Training Session";
    ViewBag.Subheader = "View training details";
    Layout = "~/Views/Shared/Layout/_LayoutForm.cshtml";
    var role = Session["role"] as Role;
    var db = new EmployeeDataContext();

    //check if leave is from notification and mark as read
    long? notificationId = ViewBag.ReadId;

    var notification = db.ApplicationNotifications.Find(notificationId);
    if (notification != null)
    {
        notification.Read = true;
    }
    db.Entry(notification).State = EntityState.Modified;
    db.SaveChanges();
}
<div>

    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Location)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Location)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StartDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StartDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EndDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EndDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StartTime)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StartTime)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EndTime)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EndTime)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CoordinatorFullname)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CoordinatorFullname)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CoordinatorCompany)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CoordinatorCompany)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CreatedBy)
        </dt>

        <dd>
            @(db.AppUsers.Find(Model.CreatedBy).DisplayName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DateCreated)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateCreated)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DateLastModified)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateLastModified)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LastModifiedBy)
        </dt>

        <dd>
            @(db.AppUsers.Find(Model.LastModifiedBy).DisplayName)
        </dd>

    </dl>
</div>
@if ((role != null) && role.ManageTraining)
{
    <!-- Button trigger modal -->
    <button type="button" class="btn btn-primary  fa fa-pencil" data-toggle="modal" data-target="#myModal">
        Edit Training
    </button>

    <!-- Modal -->
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title" id="myModalLabel">Edit Training</h4>
                </div>
                <div class="modal-body">
                    @{
                        Html.RenderPartial("TrainingManagement/EditTraining", Model);
                    }
                </div>
            </div>
        </div>

    </div>
    <!-- Button trigger modal -->
                        <button type="button" class="btn btn-danger fa fa-trash" data-toggle="modal" data-target="#myModal1">
                            Delete Training
                        </button>

                        <!-- Modal -->
                        <div class="modal fade" id="myModal1" tabindex="-1" role="dialog" aria-labelledby="myModalLabel1">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                        <h4 class="modal-title" id="myModalLabel1">Delete Training</h4>
                                    </div>@using (Html.BeginForm("Delete", "EmployeeTrainings", new { id = Model.TrainingCategoryId }))
                                    {
                                        <div class="modal-body">

                                            @Html.AntiForgeryToken()
                                            <p>
                                                Are you sure you want to delete the training?
                                            </p>

                                        </div>
                                        <div class="modal-footer">
                                            <input type="submit" value="Delete" class="btn btn-danger pull-right fa fa-trash" />
                                            <input type="button" data-dismiss="modal" value="Cancel" class="btn btn-default pull-left" />
                                        </div>
                                    }
                                </div>
                            </div>

                        </div>
                        }