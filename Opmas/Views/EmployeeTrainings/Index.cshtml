@model IEnumerable<Opmas.Data.Objects.Entities.Employee.EmployeeTraining>
@{
    ViewBag.Title = "List";
    ViewBag.Header = "Departments";
    ViewBag.Subheader = "List Of Departments";
    Layout = "~/Views/Shared/_LayoutListItems.cshtml";
    var department = new Department();
}
@if (TempData["department"] != null)
{
    if (TempData["notificationtype"].Equals(NotificationTypeEnum.Success.ToString()))
    {
        <div class="alert-success alert-dismissable">@TempData["department"]</div>
    }
    else if (TempData["notificationtype"].Equals(NotificationTypeEnum.Error.ToString()))
    {
        <div class="alert-danger alert-dismissable">@TempData["department"]</div>
    }
    else if (TempData["notificationtype"].Equals(NotificationTypeEnum.Info.ToString()))
    {
        <div class="alert-info alert-dismissable">@TempData["department"]</div>
    }
}
@section add {
    <!-- Button trigger modal -->
    <button type="button" class="btn btn-primary btn-xs fa fa-plus" data-toggle="modal" data-target="#myModal">
        Add Data
    </button>

    <!-- Modal -->
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title" id="myModalLabel">Create a new department</h4>
                </div>
                <div class="modal-body">
                    @{
                        Html.RenderPartial("CreateDepartment", department);
                    }
                </div>
            </div>
        </div>

    </div>
}
<table id="datatable" class="table table-striped table-bordered">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Location)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CoordinatorFullname)
            </th>
            <th>Action</th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Location)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CoordinatorFullname)
                </td>
                <td>
                    @Html.ActionLink("Details", "Details", new { id = item.EmployeeTrainingId }, new { @class = "btn btn-xs btn-default" })
                    @Html.ActionLink("Attendee list", "Index", "Units", new { id = item.EmployeeTrainingId }, new { @class = "btn btn-xs btn-success" })
                </td>
            </tr>
        }

    </table>